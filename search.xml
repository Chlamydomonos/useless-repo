<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第六次作业</title>
      <link href="/useless-repo/2021/08/11/homework6/"/>
      <url>/useless-repo/2021/08/11/homework6/</url>
      
        <content type="html"><![CDATA[<h2 id="第一题-循环结构复习题">第一题 循环结构复习题</h2><p><strong>斐波那契数列</strong>是指第一项为<span class="math inline">\(1\)</span>，第二项也为<span class="math inline">\(1\)</span>，之后每项为前两项相加的数列。其递推公式为<span class="math inline">\(a_n = a_{n - 1} + a_{n - 2}\)</span>。</p><p>以下是斐波那契数列的一部分： <span class="math display">\[1,\ 1,\ 2,\ 3,\ 5,\ 8,\ 13,\ 21,\ 34,\ 55,\ \dots\]</span> 编写一个程序，实现以下功能：</p><ul><li>输入一个正整数<span class="math inline">\(n\)</span></li><li>输出斐波那契数列的前<span class="math inline">\(n\)</span>项，用空格分隔</li></ul><p>示例输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1 2 3 5</span><br></pre></td></tr></table></figure><h2 id="第二题-数组一">第二题 数组（一）</h2><h3 id="知识介绍">知识介绍</h3><p>在c++语言中，可以使用<strong>数组</strong>来存储大量数据。以下是一个对数组使用的示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>];</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">a[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">cout &lt;&lt; a[<span class="number">1</span>] &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>可以看到，可以使用<code><span style="color: lightgreen">变量类型</span> <span style="color: orchid">数组名</span>[<span style="color: lightblue">数组长度</span>]</code>的方式来定义一个数组。注意，这里的数组长度只能是一个常量，而不能是变量。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> b[a]; <span class="comment">//这行代码会报错</span></span><br></pre></td></tr></table></figure><p>定义数组之后，数组拥有编号从0到数组长度-1的元素，每个元素可以作为变量赋值或者使用。</p><p>访问数组元素时，中括号内可以使用变量。如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>与变量一样，数组也可以赋初值。这是一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br></pre></td></tr></table></figure><p>对数组赋初值后，数组的前几个元素会按照初值定义，之后的元素全部被初始化为0。上面的例子中，定义的数组5个元素分别为1, 2, 3, 0, 0。</p><p>如果定义数组时不赋初值，数组中元素的值将会是不确定的。</p><p>访问数组时，如果访问的元素编号超过了可以访问的最大编号，程序将会报错。以下是一个例子：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">cin &gt;&gt; a[<span class="number">5</span>]; <span class="comment">//执行这行代码时，程序将会报错</span></span><br></pre></td></tr></table></figure><h3 id="题目">题目</h3><h4 id="section">(1)</h4><p>以下的代码定义并访问了一个数组：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">cin &gt;&gt; i;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">25</span>];</span><br><span class="line">a[i] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么，当键盘上输入的数从<u>  </u>到<u>  </u>时，程序不会报错。</p><h4 id="section-1">(2)</h4><p>编写一个程序，实现以下功能：</p><ul><li>输入一个不超过100的正整数<span class="math inline">\(n\)</span></li><li>输入<span class="math inline">\(n\)</span>个整数<span class="math inline">\(a_1, a_2, \dots, a_n\)</span></li><li>输出这<span class="math inline">\(n\)</span>个整数的平均值并换行</li><li>以输入的相反顺序输出这<span class="math inline">\(n\)</span>个整数</li></ul><p>示例输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">1 2 3 4 5 6 7 8 9 10</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5.5</span><br><span class="line">10 9 8 7 6 5 4 3 2 1</span><br></pre></td></tr></table></figure><h2 id="第二题-数组二">第二题 数组（二）</h2><h3 id="知识介绍-1">知识介绍</h3><p>在c++语言中，不仅可以定义一维数组，还可以定义多维数组。以下是一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>][<span class="number">5</span>];</span><br><span class="line">a[<span class="number">0</span>][<span class="number">1</span>][<span class="number">2</span>] = <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p>多维数组也可以赋初值，但这种用法很少见而且容易出错。一般来说，可以用以下方法把多维数组直接全部赋初值为0：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123;<span class="number">0</span>&#125;;</span><br></pre></td></tr></table></figure><h3 id="题目-1">题目</h3><figure><img src="https://www.luogu.com.cn/problem/T193793" alt="提交地址" /><figcaption aria-hidden="true">提交地址</figcaption></figure><p>一个棋子在一个<span class="math inline">\(16 \times 16\)</span>的棋盘上移动。初始状态，棋盘上所有格子都是白色，但棋子经过的格子会变成黑色。</p><p>棋盘以其左下角为原点，向右为<span class="math inline">\(x\)</span>轴正方向，向上为<span class="math inline">\(y\)</span>轴正方向。左下角的格子坐标为<span class="math inline">\((0,0)\)</span>。</p><p>编写一个程序，实现以下功能：</p><ul><li><p>输入棋子的初始坐标<span class="math inline">\(x_0, y_0\)</span>（这个格子也会被染成黑色）</p></li><li><p>输入棋子移动的次数<span class="math inline">\(n\)</span></p></li><li><p>输入<span class="math inline">\(n\)</span>个关于棋子移动的数据，其中每个数据由两个正整数组成，第一个正整数代表棋子移动的方向——0：向上，1，向右，2，向下，3：向左；第二个正整数代表棋子移动的距离</p><p>例：假设棋子初始位置为<span class="math inline">\((1, 2)\)</span>，输入<code>1 5</code>，棋子向右移动5个格子，位置变为<span class="math inline">\((1, 7)\)</span>，经过以及停留的所有格子变成黑色。</p></li><li><p>输出<span class="math inline">\(n\)</span>次移动后棋盘上黑色格子的总数。</p></li></ul><p>输入将会满足棋子在任何情况下不超出棋盘边缘。</p><p>示例输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">5 5</span><br><span class="line">4</span><br><span class="line">1 5</span><br><span class="line">0 3</span><br><span class="line">3 3</span><br><span class="line">2 5</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16</span><br></pre></td></tr></table></figure><p>解释：</p><p>棋盘上黑色部分如下：</p><figure><img src="https://i.loli.net/2021/08/11/HpCkZzcUYdGqjeb.png" alt="20210811163105" /><figcaption aria-hidden="true">20210811163105</figcaption></figure><p>因此黑色格子共有16个。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第五次作业</title>
      <link href="/useless-repo/2021/08/10/homework5/"/>
      <url>/useless-repo/2021/08/10/homework5/</url>
      
        <content type="html"><![CDATA[<h2 id="第一题-循环结构二">第一题 循环结构（二）</h2><span id="more"></span><h3 id="知识介绍">知识介绍</h3><p>当<code>for</code>语句后紧跟一个语句块时，这个语句块被称为<strong>循环体</strong>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//这是循环体</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在循环体中，可以使用<code>break</code>与<code>continue</code>来控制循环。</p><p><code>break</code>语句的作用：停止循环，跳过循环体，执行之后的代码。以下是一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span>(i == <span class="number">5</span>)</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>; <span class="comment">//当i的值从0到4时，循环正常执行，输出i；当i的值为5时，循环由于前面的break语句而结束，i不会被输出</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;end&quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>这个程序的输出为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 1 2 3 4 end</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>continue</code>语句的作用：跳过这次循环，执行<code>for</code>语句中括号内第三个语句，开始下一次循环。以下是一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;end&quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>这个程序的输出为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 1 3 4 end</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="题目">题目</h3><h4 id="section">（1）</h4><p>判断以下程序的输出：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">4</span> == <span class="number">0</span> || i / <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;A &quot;</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = i - <span class="number">2</span>; j &lt; i + <span class="number">2</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                cout &lt;&lt; j &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span>(j == <span class="number">5</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    cout &lt;&lt; <span class="string">&quot;B &quot;</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="section-1">（2）</h4><p>以下是一个判断输入的数字是否为质数的程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    cin &gt;&gt; a;</span><br><span class="line">    <span class="keyword">bool</span> isPrime = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; a; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a % i == <span class="number">0</span>)</span><br><span class="line">            isPrime = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(isPrime)</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; <span class="string">&quot; is a prime number.&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        cout &lt;&lt; a &lt;&lt; <span class="string">&quot; is not a prime number.&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请修改该程序以减少计算量。</p><h2 id="第二题-循环结构三">第二题 循环结构（三）</h2><p>在c++语言中，除了<code>for</code>循环以外，还有一种更为简单的循环——<code>while</code>循环。以下是<code>while</code>循环的一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt;= <span class="number">1024</span>)</span><br><span class="line">i = i * <span class="number">2</span>;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>可以看到，与<code>for</code>循环不同，<code>while</code>语句的括号中只有一个表达式。<code>while</code>循环的执行过程如下：</p><ul><li>开始循环</li><li>对于每一次循环，计算括号内表达式的值<ul><li>如果值为<code>true</code>：<ul><li>执行<code>while</code>语句的下一个语句</li><li>开始下一次循环</li></ul></li><li>如果值为<code>false</code>：<ul><li>停止循环</li><li>跳过<code>while</code>语句的下一个语句</li><li>正常执行之后的代码</li></ul></li></ul></li></ul><p>因此，以上示例程序的输出为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2048</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同样，当<code>while</code>语句后为语句块时，这个语句块也被称为<strong>循环体</strong>。在循环体中也可以使用<code>break</code>和<code>continue</code>语句停止循环或者跳过一次循环。</p><p>利用<code>while</code>循环，可以非常方便地写出一个永远不会停止的死循环：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//死循环</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="题目-1">题目</h3><p>编写一个程序，实现以下功能：</p><ul><li>从键盘输入一个正整数<span class="math inline">\(a\)</span></li><li>利用<code>while</code>循环，计算<span class="math inline">\(a\)</span>的位数</li><li>输出<span class="math inline">\(a\)</span>的位数</li></ul><p>示例输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">142857</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第四次作业</title>
      <link href="/useless-repo/2021/08/07/homework4/"/>
      <url>/useless-repo/2021/08/07/homework4/</url>
      
        <content type="html"><![CDATA[<h2 id="复习题一">复习题（一）</h2><span id="more"></span><h3 id="变量交换">1.变量交换</h3><p>编写一个程序，实现以下功能：</p><ul><li>定义整数变量<code>a</code>和<code>b</code></li><li>从键盘输入<code>a</code>和<code>b</code>的值</li><li>输出<code>a</code>和<code>b</code>的值，用空格分隔，并换行</li><li>交换<code>a</code>和<code>b</code>的值</li><li>输出<code>a</code>和<code>b</code>的值，用空格分隔</li></ul><p>示例输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 2</span><br><span class="line">2 1</span><br></pre></td></tr></table></figure><p><strong>注意，必须依据题目要求交换</strong><code>a</code><strong>和</strong><code>b</code><strong>，不能直接用</strong><code>cout &lt;&lt; b &lt;&lt; ' ' &lt;&lt; a</code><strong>输出</strong>。</p><p><span style="color: red;"><b>错误的</b></span>示例代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">cout &lt;&lt; a &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; b &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数字求和">2.数字求和</h3><p>编写一个程序，实现以下功能：</p><ul><li>输入一个正整数<span class="math inline">\(n\)</span></li><li>输入<span class="math inline">\(n\)</span>个正整数<span class="math inline">\(a_1, a_2, \dots, a_n\)</span></li><li>输出<span class="math inline">\(a_1, a_2, \dots, a_n\)</span>中所有奇数的和</li></ul><p>示例输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">1 2 5 8 7 3 4 6</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16</span><br></pre></td></tr></table></figure><h3 id="数位分解">3. 数位分解</h3><p>编写一个程序，实现以下功能：</p><ul><li><p>输入一个不超过10的正整数<span class="math inline">\(n\)</span></p></li><li><p>输入一个<span class="math inline">\(n\)</span>位的正整数<span class="math inline">\(a\)</span></p></li><li><p>按从后往前的输出<span class="math inline">\(a\)</span>的每位，中间用空格分隔</p></li></ul><p>示例输入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">142857</span><br></pre></td></tr></table></figure><p>示例输出：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">7 5 8 2 4 1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第三次作业</title>
      <link href="/useless-repo/2021/08/06/homework3/"/>
      <url>/useless-repo/2021/08/06/homework3/</url>
      
        <content type="html"><![CDATA[<h2 id="第一题-分支结构">第一题 分支结构</h2><span id="more"></span><h3 id="知识介绍">知识介绍</h3><p>分支结构是编程语言中一种重要的结构。它可以让程序根据不同情况，做出不同的反应。</p><p>在c++语言中，可以使用<code>if</code>语句来实现分支结构。以下是一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span>(a == <span class="number">0</span>)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a is 0&quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p><code>if</code>语句后的括号内填写的是一个布尔值或者一个运算结果为布尔值的表达式。如果括号内表达式的运算结果为<code>true</code>，那么<code>if</code>语句后的下一个语句会执行。否则，下一个语句不会执行。</p><p><code>if</code>语句只能影响它的下一个语句，而对之后的语句没有影响。以下是一个例子：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">false</span>)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;A&quot;</span> &lt;&lt; endl; <span class="comment">//这个语句不会执行，因为它前面的if语句内是false</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;B&quot;</span> &lt;&lt; endl; <span class="comment">//这个语句会正常执行</span></span><br></pre></td></tr></table></figure><p>注意，<code>if</code>语句与受它影响的语句视为一个语句，而不是两个语句。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;A&quot;</span> &lt;&lt; endl; <span class="comment">//由于这个语句与前面的if(true)视为一个语句，所以它在if(false)的影响下，不会执行</span></span><br></pre></td></tr></table></figure><p><code>if</code>语句可以配合<code>else</code>语句使用。以下是一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line">cin &gt;&gt; a;</span><br><span class="line"><span class="keyword">if</span>(a == <span class="number">0</span>)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a is 0&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;a is not 0&quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>当<code>if</code>语句与<code>else</code>语句一同使用时，如果<code>if</code>语句内的值是<code>true</code>，那么执行<code>if</code>语句后的下一个语句，否则，执行<code>else</code>语句后的下一个语句。注意，<code>if</code>语句和<code>else</code>语句之间只能有一个语句。</p><p>在这种用法中，<code>if</code>语句，<code>if</code>语句之后的语句，<code>else</code>语句和<code>else</code>语句之后的语句这4个语句是一个整体，视为一条语句。</p><p>如果需要在<code>if</code>语句中执行多个语句，可以使用<strong>语句块</strong>。</p><p><span id="code-block"></span><strong>语句块</strong>是指被大括号<code>&#123;&#125;</code>包围的若干个语句，而一个语句块被视为一条语句。以下是一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;A&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;B&quot;</span> &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;C&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;<span class="comment">//以上的3条输出语句在一个语句块中，所以都不会执行</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;D&quot;</span> &lt;&lt; endl;<span class="comment">//这条输出语句会执行</span></span><br></pre></td></tr></table></figure><p>当需要依次对多个条件进行判断时，可以把<code>if</code>和<code>else</code>语句写成一种特殊的格式，如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> a, b, c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">if</span>(a)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;A&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(b)</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;B&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(c)</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;C&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;D&quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>这种写法等价于以下的写法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> a, b, c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="keyword">if</span>(a)</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;A&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">if</span>(b)</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;B&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">if</span>(c)</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;C&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;D&quot;</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><h3 id="题目">题目</h3><p>学生的成绩有两种表示方式。一种是百分制成绩，一种是成绩评级。用百分制成绩计算成绩评级的方法如下：</p><ul><li>如果成绩大于等于90分，评级为A</li><li>如果成绩小于90分但大于等于80分，评级为B</li><li>如果成绩小于80分但大于等于70分，评级为C</li><li>如果成绩小于70分担大于等于60分，评级为D</li><li>如果成绩小于60分，评级为F</li></ul><p>编写一个程序，实现以下功能：</p><ul><li>输入一个学生的百分制成绩</li><li>输出该学生的成绩评级</li></ul><h2 id="第二题-变量的作用域">第二题 变量的作用域</h2><h3 id="知识介绍-1">知识介绍</h3><p>在一个程序中，每个变量都存储在内存中。所以，为了防止内存耗尽，变量不是永远存在的，会在特定的时刻被删除。</p><p>以下是一个程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">1</span>;</span><br><span class="line">    </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> c = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>)</span><br><span class="line">        <span class="keyword">int</span> d = <span class="number">3</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个程序中，变量<code>a</code>位于程序的最外层，称为<strong>全局变量</strong>。全局变量在程序开始运行的时候被创建，程序结束运行的时候被删除。</p><p>变量<code>b</code>位于主函数中，在主函数结束运行时被删除。</p><p>变量<code>c</code>位于语句块中，在语句块执行完毕后就会被删除。</p><p>变量<code>d</code>位于<code>if</code>语句中，在<code>if</code>语句执行完毕后就会被删除。</p><p>因此，以下的几个程序都会报错。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; a;<span class="comment">//a已经被删除了，不能再输出</span></span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="literal">true</span>)</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; b;<span class="comment">//b已经被删除了，不能再输出</span></span><br></pre></td></tr></table></figure><p>变量从创建到删除的范围，称作变量的<strong>作用域</strong>。</p><h3 id="题目-1">题目</h3><p>判断以下的程序是否正确。</p><h4 id="section">（1）</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="section-1">(2)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="section-2">(3)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="section-3">(4)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="section-4">(5)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">true</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line">        cout &lt;&lt; a &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第三题-循环结构一">第三题 循环结构（一）</h2><h3 id="知识介绍-2">知识介绍</h3><p>循环结构也是编程语言中一种十分重要的结构。有了循环结构，计算机才能一次性进行大量的运算。</p><p>在c++语言中，可以用<code>for</code>语句来表示循环结构。以下是一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i = i + <span class="number">1</span>)</span><br><span class="line">    cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>可以看到，<code>for</code>语句后面的括号里有三个语句，之间用分号<code>;</code>分隔。<code>for</code>循环的执行过程如下：</p><ul><li>首先执行括号里的第一个语句</li><li>之后，开始循环<ul><li>对于每一次循环，首先执行括号里的第二个语句，获取计算结果。<ul><li>如果结果为<code>true</code><ul><li>先执行for循环之后的第一个语句</li><li>再执行括号里的第三个语句</li><li>继续循环</li></ul></li><li>如果结果为<code>false</code><ul><li>结束循环，跳过for循环之后的第一个语句，执行之后的内容</li></ul></li></ul></li></ul></li></ul><p>因此，上面的循环语句的执行情况如下：</p><ul><li>首先执行<code>int i = 0</code>，定义变量<code>i</code>并赋初值0</li><li>之后，开始循环</li><li>第一次循环<ul><li>执行<code>i &lt; 3</code>，结果为<code>true</code></li><li>执行<code>cout &lt;&lt; i &lt;&lt; ' ';</code>，输出<code>i</code>和一个空格</li><li>执行<code>i = i + 1</code>，<code>i</code>的值变为1</li></ul></li><li>第二次循环<ul><li>执行<code>i &lt; 3</code>，结果为<code>true</code></li><li>执行<code>cout &lt;&lt; i &lt;&lt; ' ';</code>，输出<code>i</code>和一个空格</li><li>执行<code>i = i + 1</code>，<code>i</code>的值变为2</li></ul></li><li>第三次循环<ul><li>执行<code>i &lt; 3</code>，结果为<code>true</code></li><li>执行<code>cout &lt;&lt; i &lt;&lt; ' ';</code>，输出<code>i</code>和一个空格</li><li>执行<code>i = i + 1</code>，<code>i</code>的值变为3</li></ul></li><li>第四次循环<ul><li>执行<code>i &lt; 3</code>，结果为<code>false</code></li><li>停止循环，跳过<code>cout &lt;&lt; i &lt;&lt; ' ';</code>，不输出</li></ul></li><li>正常执行<code>cout &lt;&lt; endl;</code></li></ul><p>所以，这个循环语句最后的输出是：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">0 1 2</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>与<code>if</code>语句相同，<code>for</code>语句也只能影响后面的一个语句。如果要在<code>for</code>循环内执行多个语句，需要使用<strong><a href="#code-block">语句块</a></strong>。以下是一个示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;A&quot;</span> &lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里要注意，<code>++</code>在c++语言中是自增运算符，<code>i++</code>等价于<code>i = i + 1</code>。同样，<code>--</code>是自减运算符，<code>i--</code>等价于<code>i = i - 1</code>。</p><p>以上的两个例子示例了<code>for</code>循环最常见的用法：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种用法中，循环一共会进行<code>n</code>次，并且，每次循环，<code>i</code>的值都是循环的次数减去1。</p><h3 id="题目-2">题目</h3><h4 id="section-5">（1）</h4><p>判断以下程序的输出：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i % <span class="number">3</span> == <span class="number">0</span> || i * <span class="number">4</span> == <span class="number">20</span>)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;A &quot;</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                cout &lt;&lt; <span class="string">&quot;B &quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="section-6">(2)</h3><p>编写一个程序，实现以下功能：</p><ul><li>输入一个整数<span class="math inline">\(n\)</span></li><li>输入<span class="math inline">\(n\)</span>个整数<span class="math inline">\(a_1, a_2, \dots, a_n\)</span></li><li>输出<span class="math inline">\(a_1, a_2, \dots, a_n\)</span>中最大的数</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第二次作业</title>
      <link href="/useless-repo/2021/08/05/homework2/"/>
      <url>/useless-repo/2021/08/05/homework2/</url>
      
        <content type="html"><![CDATA[<h2 id="第一题-整数与小数的运算">第一题 整数与小数的运算</h2><span id="more"></span><h3 id="知识介绍">知识介绍</h3><p>在c++语言中，整数和小数可以进行加<code>+</code>，减<code>-</code>，乘<code>*</code>，除<code>/</code>等运算。例如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">3</span> + <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>这个语句的含义为：定义变量<code>a</code>，并把<code>a</code>赋值为<code>3 + 2</code>的结果。</p><p>像<code>3 + 2</code>这样含有运算符的式子叫做<strong>表达式</strong>。表达式可以直接被输出，也可以赋值给变量。如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="number">4</span> - <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">5</span> * <span class="number">7</span>;</span><br></pre></td></tr></table></figure><p>表达式不仅能包括数字，也可以包括变量。以下是一个例子：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> c = a * b;</span><br><span class="line">cout &lt;&lt; c &lt;&lt; endl; <span class="comment">//会输出10</span></span><br></pre></td></tr></table></figure><p>要注意的是，在c++语言中，两个整数进行除法运算，得到的结果仍然是整数，相当于把实际的商取整数部分。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="number">3</span> / <span class="number">2</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>这个语句将会输出1，因为<span class="math inline">\(3 \div 2 = 1.5\)</span>，而1.5的整数部分是1。</p><p>而如果除法包含小数，得到的结果则会是小数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="number">3</span> / <span class="number">2.0</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="number">3.0</span> / <span class="number">2</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="number">3.0</span> / <span class="number">2.0</span> &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>以上的三个语句都会输出1.5。</p><p>要想获得两个整数的商，可以使用<strong>强制类型转换</strong>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">3</span>, b = <span class="number">2</span>;</span><br><span class="line">cout &lt;&lt; a / b &lt;&lt; endl; <span class="comment">//输出1，因为a和b都是整数</span></span><br><span class="line">cout &lt;&lt; a / (<span class="keyword">float</span>)b &lt;&lt; endl; <span class="comment">//输出1.5，(float)b表示把b强制转换为float类型。</span></span><br></pre></td></tr></table></figure><p>同时，c++还有取余运算符<code>%</code>，读作“模”。<code>a % b</code>代表“a除以b的余数”。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="number">3</span> % <span class="number">2</span> &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line">cout &lt;&lt; <span class="number">6</span> % <span class="number">3</span> &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">cout &lt;&lt; <span class="number">30</span> % <span class="number">7</span> &lt;&lt; endl; <span class="comment">//输出2</span></span><br></pre></td></tr></table></figure><p>c++的各运算符优先级和数学上相同，是先乘除，后加减。如果需要不按优先级计算，可以使用括号。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="number">3</span> * <span class="number">2</span> + <span class="number">1</span> &lt;&lt; endl; <span class="comment">//输出7</span></span><br><span class="line">cout &lt;&lt; <span class="number">3</span> * (<span class="number">2</span> + <span class="number">1</span>) &lt;&lt; endl; <span class="comment">//输出9</span></span><br></pre></td></tr></table></figure><h3 id="题目">题目</h3><h4 id="section">（1）</h4><p>判断下面程序的输出：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1.5</span>;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>, b = <span class="number">2</span>;</span><br><span class="line">    a = a + b;</span><br><span class="line">    b = a * b;</span><br><span class="line">    a = a / b;</span><br><span class="line">    a = a + b * <span class="number">2</span>;</span><br><span class="line">    a = ((a + b) * (a - b) + <span class="number">1</span>) * <span class="number">0.25</span>;</span><br><span class="line">    a = a % b;</span><br><span class="line">    cout &lt;&lt; a &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="section-1">(2)</h4><p>编写一个程序，实现以下功能：</p><ul><li>从键盘输入两个整数</li><li>输出它们的和，差，积，商（商用小数表示）以及余数，之间用空格分隔，最后换行</li></ul><h2 id="第二题-布尔值与逻辑运算">第二题 布尔值与逻辑运算</h2><h3 id="知识介绍-1">知识介绍</h3><p>在c++语言中，有一种特殊的变量类型——布尔类型<code>bool</code>。一个<code>bool</code>类型的变量只有两种可能的取值——<code>true</code>或者<code>false</code>。</p><p>这是一个例子：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> a = <span class="literal">true</span>;</span><br><span class="line">a = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><p>实际上，c++语言用整数<code>1</code>和<code>0</code>来代表布尔值<code>true</code>和<code>false</code>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="literal">true</span> &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line">cout &lt;&lt; <span class="literal">false</span> &lt;&lt; endl; <span class="comment">//输出0</span></span><br></pre></td></tr></table></figure><p>那么，布尔值存在的意义是什么呢？</p><p>在c++语言中，有一类会产生布尔值的运算符，它们被称为逻辑运算符。通常，它们被用来判断两个数字的关系。以下是一些常见的逻辑运算符：</p><p><code>==</code>：判断两个数是否相等。如果相等，结果为<code>true</code>，否则结果为<code>false</code>。注意，它和赋值运算符<code>=</code>很容易混淆。</p><p>用法示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="number">1</span> == <span class="number">2</span> &lt;&lt; endl; <span class="comment">//输出0（也就是false）</span></span><br><span class="line">cout &lt;&lt; <span class="number">2</span> == <span class="number">2</span> &lt;&lt; endl; <span class="comment">//输出1（也就是true）</span></span><br></pre></td></tr></table></figure><p><code>&gt;</code>：判断前面的数是否大于后面的数。用法示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="number">1</span> &gt; <span class="number">3</span> &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">cout &lt;&lt; <span class="number">3</span> &gt; <span class="number">3</span> &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">cout &lt;&lt; <span class="number">4</span> &gt; <span class="number">3</span> &lt;&lt; endl; <span class="comment">//输出1</span></span><br></pre></td></tr></table></figure><p><code>&gt;=</code>：判断前面的数是否大于等于后面的数。用法示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="number">1</span> &gt;= <span class="number">3</span> &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">cout &lt;&lt; <span class="number">3</span> &gt;= <span class="number">3</span> &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line">cout &lt;&lt; <span class="number">4</span> &gt;= <span class="number">3</span> &lt;&lt; endl; <span class="comment">//输出1</span></span><br></pre></td></tr></table></figure><p><code>&lt;</code>：判断前面的数是否小于后面的数。</p><p><code>&lt;=</code>：判断前面的数是否小于等于后面的数。</p><p>同时，还有三个用于布尔值之间的运算符：与<code>&amp;&amp;</code>，或<code>||</code>和非<code>!</code>。</p><p>它们的用法：</p><ul><li><code>&amp;&amp;</code>：只有前后都为<code>true</code>时，结果为<code>true</code>，否则为<code>false</code>。</li><li><code>||</code>：只有前后都为<code>false</code>时，结果为<code>false</code>，否则为<code>true</code>。</li><li><code>!</code>：当后面为<code>true</code>时，结果为<code>false</code>；当后面为<code>false</code>时，结果为<code>true</code>。</li></ul><p>这是它们的示例：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; <span class="literal">true</span> &amp;&amp; <span class="literal">true</span> &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line">cout &lt;&lt; <span class="literal">true</span> &amp;&amp; <span class="literal">false</span> &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">cout &lt;&lt; <span class="literal">false</span> &amp;&amp; <span class="literal">false</span> &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">cout &lt;&lt; <span class="literal">true</span> || <span class="literal">true</span> &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line">cout &lt;&lt; <span class="literal">true</span> || <span class="literal">false</span> &lt;&lt; endl; <span class="comment">//输出1</span></span><br><span class="line">cout &lt;&lt; <span class="literal">false</span> || <span class="literal">false</span> &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">cout &lt;&lt; !<span class="literal">true</span> &lt;&lt; endl; <span class="comment">//输出0</span></span><br><span class="line">cout &lt;&lt; !<span class="literal">false</span> &lt;&lt; endl; <span class="comment">//输出1</span></span><br></pre></td></tr></table></figure><p>在c++语言中，整数和小数可以被强制转换为布尔类型。任何不为0的整数和小数转换为布尔类型之后为<code>true</code>，0转换为布尔类型之后为<code>false</code>。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; !(!<span class="number">3</span>) &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>在上面的例子中，由于<code>!</code>运算符只能对布尔类型使用，所以3被强制转换为<code>true</code>，<code>!3</code>的结果是<code>false</code>，再使用一次<code>!</code>运算符，最后的结果是<code>true</code>。所以，这条语句的输出是<code>1</code>。</p><h3 id="题目-1">题目</h3><h4 id="section-2">（1）</h4><p>判断下面程序的输出：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cout &lt;&lt; ((<span class="number">3</span> + <span class="number">2</span>) &gt; (<span class="number">15</span> % <span class="number">8</span>)) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; ((<span class="number">2</span> / <span class="number">3</span>) == (<span class="number">2.0</span> / <span class="number">3</span>)) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; !((<span class="number">1</span> + <span class="number">5</span>) &gt;= (<span class="number">2</span> + <span class="number">4</span>)) &lt;&lt; endl;</span><br><span class="line">    cout &lt;&lt; ((<span class="number">3</span> + <span class="number">2</span>) || (<span class="number">5</span> == <span class="number">7</span>)) &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="section-3">（2）</h4><p>编写一个程序，实现以下功能：</p><ul><li>从键盘输入一个小数</li><li>输出这个小数是否大于50（直接输出1或者0）</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一次作业</title>
      <link href="/useless-repo/2021/08/05/homework1/"/>
      <url>/useless-repo/2021/08/05/homework1/</url>
      
        <content type="html"><![CDATA[<h2 id="第一题hello-world">第一题：Hello World</h2><span id="more"></span><h3 id="题目">题目：</h3><p>写一个程序，使其输出以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello world and C++!</span><br></pre></td></tr></table></figure><h2 id="第二题变量与输入输出">第二题：变量与输入输出</h2><h3 id="知识介绍">知识介绍：</h3><h4 id="变量">变量</h4><p>在编程语言中，变量指的是值可以改变的量。在C++语言中，可以按以下方式定义一个变量：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br></pre></td></tr></table></figure><p>其中，前面的<code>int</code>是变量的<strong>类型</strong>，代表整数。c++语言中，变量有很多类型，例如，<code>int</code>代表整数，<code>float</code>代表小数。</p><p>后面的<code>a</code>是变量的<strong>名称</strong>。变量可以用任意的<strong>标识符</strong>作为名称。一个标识符需要符合以下的规则：</p><ul><li><p>由字母，数字，下划线（<code>_</code>）和美元符号（<code>$</code>）组成</p></li><li><p>开头不是数字</p></li><li><p>不与<strong>关键字</strong>重名</p><p><strong>关键字</strong>是c++语言内一些有特殊用途的词语，比如<code>if</code>，<code>for</code>等。</p><p>在Visual Studio Code中，关键字被标为<span style="color: #C586C0">紫色</span>。</p></li></ul><p>这条语句以<strong>分号</strong>（<code>;</code>）结尾。所有的c++语句都需要以分号结尾。注意，这里的分号是英文分号（<code>;</code>）而不是中文分号（<code>；</code>）。</p><p>c++语言中，不允许出现同名的变量。因此，下面的程序会报错。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> a;</span><br></pre></td></tr></table></figure><p>定义了变量之后，可以用赋值符号<code>=</code>向变量赋值。</p><p>以下是一段示例程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a; <span class="comment">//定义变量a</span></span><br><span class="line">a = <span class="number">0</span>; <span class="comment">//把a赋值为0</span></span><br><span class="line">a = <span class="number">2</span>; <span class="comment">//把a赋值为2</span></span><br></pre></td></tr></table></figure><p>用一个定义语句可以定义多个变量，如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b, c;</span><br></pre></td></tr></table></figure><p>这个语句同时定义了变量名分别为<code>a</code>，<code>b</code>，<code>c</code>的三个<code>int</code>类型变量。这里的逗号只能是英文逗号<code>,</code>而不能是中文逗号<code>，</code>。</p><p>可以在定义变量的同时给变量赋值。如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>这种方法也称为<strong>定义变量并赋初值</strong>。</p><h4 id="输入输出">输入输出</h4><p>在c++语言中，<code>cin</code>用来输入数据，<code>cout</code>用来输出数据。</p><p>这是对输入输出的一个示例程序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//要想使用输入输出，在程序的开头必须添加这两个语句</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    cin &gt;&gt; a; <span class="comment">//从键盘输入一个整数，作为a的值</span></span><br><span class="line">    cout &lt;&lt; a; <span class="comment">//输出a的值</span></span><br><span class="line">    cout &lt;&lt; endl; <span class="comment">//结束一行的输出</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//对于每个c++程序，在主函数的最后要添加return 0;语句，来保证程序正常退出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>cin</code>和<code>cout</code>可以用来一次输入/输出多个变量，比如：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a, b;</span><br><span class="line"><span class="keyword">float</span> c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br></pre></td></tr></table></figure><p>以上的语句代表依次从键盘输入<code>a</code>，<code>b</code>，<code>c</code>三个变量。</p><p>输出多个值的情况类似：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cout &lt;&lt; a &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; b &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; c &lt;&lt; endl;</span><br></pre></td></tr></table></figure><p>这个语句代表，依次输出以下内容：</p><ul><li>变量a的值</li><li>一个空格</li><li>变量b的值</li><li>一个空格</li><li>变量c的值</li><li>结束一行的输出</li></ul><h3 id="题目-1">题目</h3><h4 id="section">（1）</h4><p>编写一个程序，实现以下内容：</p><ul><li>定义一个名为<code>a</code>的<code>int</code>类型变量</li><li>把<code>a</code>赋值为<code>0</code></li><li>输出<code>a</code>并换行（使用<code>endl</code>）</li><li>把<code>a</code>赋值为<code>2</code></li><li>输出<code>a</code>并换行（使用<code>endl</code>）</li><li>把<code>a</code>赋值为<code>5</code></li><li>输出<code>a</code>并换行（使用<code>endl</code>）</li><li>定义一个名为<code>b</code>的<code>float</code>类型变量</li><li>把<code>b</code>赋值为<code>3.5</code></li><li>输出<code>a</code>和<code>b</code>并换行（使用<code>endl</code>），<code>a</code>和<code>b</code>之间用空格分隔</li></ul><h4 id="section-1">(2)</h4><p>编写一个程序，实现以下内容：</p><ul><li>从键盘输入3个整数和1个小数</li><li>输出刚刚输入的这3个整数和1个小数的值，中间用空格分隔</li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
